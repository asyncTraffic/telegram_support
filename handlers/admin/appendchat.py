from aiogram import Bot, Dispatcher, F, Router
from aiogram.filters import Command, CommandObject
from aiogram.types import *
from utils.misc_func.bot_models import *
from loader import *
from datetime import datetime
from keyboards.inline.adminkeyinline import *
from utils.bot_database import BotDB

from aiogram.methods.create_forum_topic import CreateForumTopic

from states.other_state import *
from utils.misc_func.filters import *

from keyboards.reply.adminkey import *
from aiogram.filters.chat_member_updated import ChatMemberUpdatedFilter, IS_NOT_MEMBER, MEMBER, ADMINISTRATOR
from loguru import logger
from aiogram.exceptions import TelegramBadRequest

@adminRouter.my_chat_member(
                            ChatMemberUpdatedFilter(member_status_changed=IS_NOT_MEMBER >> ADMINISTRATOR),
                            F.chat.type.in_({"group", "supergroup"}))
async def addedBotChannel(event: ChatMemberUpdated, bot: Bot):
    logger.info(event.chat.type)
    logger.info(event.from_user.id)
    
    async with BotDB() as db:
        await db.updateWaitChat(event.chat.id)
    
    

@adminRouter.message(F.text == 'üí≠ –ß–∞—Ç')
@adminRouter.callback_query(F.data == 'chat_support')
async def chat_supportFunc(upd: Union[Message, CallbackQuery], state: FSM, bot: Bot):

    await state.clear()

    async with BotDB() as db:
        settings = await db.getSettings()

    if settings['chat_id'] == None:
        text = f'''
‚ùóÔ∏è –£ –≤–∞—Å –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω —á–∞—Ç –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏! –°–∫–æ—Ä–µ–µ –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ üëáüèª.
'''
    
    else:
        try:
            checkChat = await bot.get_chat(int(settings['chat_id']))

            text = f'''

üÜî: <code>{settings['chat_id']}</code>
üî∞ –ò–º—è —á–∞—Ç–∞: <b>{checkChat.title}</b>

<i>–ß—Ç–æ –±—ã —Å–º–µ–Ω–∏—Ç—å —á–∞—Ç –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ üëáüèª</i>
'''
        except:
            text = f'''

‚ùóÔ∏è –í–Ω–∏–º–∞–Ω–∏–µ ‚ùóÔ∏è –ß–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π –í—ã –¥–æ–±–∞–≤–∏–ª–∏ —Ä–∞–Ω–µ–µ –ø–æ –∫–∞–∫–æ–π —Ç–æ –ø—Ä–∏—á–∏–Ω–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –í—ã —É–¥–∞–ª–∏–ª–∏ –±–æ—Ç–∞ –∏–∑ —á–∞—Ç–∞, –∏–ª–∏ —Å–∞–º —á–∞—Ç –±—ã–ª —É–¥–∞–ª–µ–Ω.
–°—Ä–æ—á–Ω–æ —Å–º–µ–Ω–∏—Ç–µ —á–∞—Ç –∏–ª–∏ –µ—Å–ª–∏ –í—ã –ø–æ –æ—à–∏–±–∫–µ —É–¥–∞–ª–∏–ª–∏ –±–æ—Ç–∞ –∏–∑ —á–∞—Ç–∞ –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –æ–±—Ä–∞—Ç–Ω–æ!

üÜî: <code>{settings['chat_id']}</code>
üî∞ –ò–º—è —á–∞—Ç–∞: <b>{settings['chat_name']}</b>
'''

    title = '<b>üí≠ –ß–∞—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∞</b>'

    finishText = title + text

    try:
        await upd.message.edit_text(text, reply_markup=setChatKey)
    except:
        await upd.answer(finishText, reply_markup=setChatKey)


@adminRouter.callback_query(F.data == 'set_chat_support')
async def set_chat_supportFunc(call: CallbackQuery, state: FSM, bot: Bot):

    thisBot = await bot.get_me()
    usernameBot = thisBot.username

    await state.clear()

    text = f'''
‚ÑπÔ∏è –î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –¥–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ —á–∞—Ç: 

1. <b>–° –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏</b> "<i>‚ÜóÔ∏è –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ —á–∞—Ç</i>" <b>–¥–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ —á–∞—Ç, –Ω–µ –≤—ã–∫–ª—é—á–∞—è –Ω–∏–∫–∞–∫–∏–µ –ø—Ä–∞–≤–∞.</b>
2. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "<i>üëÅ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å</i>"

–ï—Å–ª–∏ –≤—Å–µ –±—ã–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –í—ã –∑–∞–¥–∞–ª–∏ —á–∞—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –¥–ª—è –±–æ—Ç–∞.
'''
    await call.message.edit_text(text, reply_markup=addBotInChat(f'https://t.me/{usernameBot}?startgroup=true&admin=change_info+edit_messages+post_messages+delete_messages+restrict_members+invite_users+pin_messages+manage_topics+promote_members+anonymous+manage_chat'))



@adminRouter.callback_query(F.data == 'check_bot_in_chat')
async def check_bot_in_chatFunc(call: CallbackQuery, state: FSM, bot: Bot):

    async with BotDB() as db:
        waitChat = await db.getWaitChat()

    if waitChat['wait_chat_id'] != 'None':
        chat_id = waitChat['wait_chat_id']
        
        try:
            checkChat = await bot.get_chat(int(chat_id))

            text = f'''
üëÅ –ë—ã–ª –æ–±–Ω–∞—Ä—É–∂–µ–Ω —á–∞—Ç: <b>{checkChat.title}</b>

<i>–ó–∞–¥–∞—Ç—å —ç—Ç–æ—Ç —á–∞—Ç –∫–∞–∫ —á–∞—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∞?</i>
'''

            await call.message.edit_text(text, reply_markup=addChatKey(checkChat.id))

        except Exception as e:
            logger.error(e)
            await call.answer('üí≠ –ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\n–í–æ–∑–º–æ–∂–Ω–æ, —Ç–∞–∫–æ–≥–æ —á–∞—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω')
    
    else:
        await call.answer('üí≠ –ö–∞–∂–µ—Ç—Å—è, –í—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏–∫–∞–∫–æ–π —á–∞—Ç', True)

    
@adminRouter.callback_query(F.data.startswith('addchat_'))
async def addchat_Func(call: CallbackQuery, state: FSM, bot: Bot):

    chat_id = call.data.split('_')[1]

    try:
        checkChat = await bot.get_chat(int(chat_id))

        await call.message.edit_reply_markup(reply_markup=waitKey)

        try:
            flood = await bot.create_forum_topic(checkChat.id, name='–û–±—â–µ–Ω–∏–µ')
            await bot.send_message(checkChat.id, '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–º—ã "–û–±—â–µ–Ω–∏–µ"', message_thread_id=flood.message_thread_id)

            notification = await bot.create_forum_topic(checkChat.id, name='–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
            await bot.send_message(checkChat.id, '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–º—ã "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"\n\n–°—é–¥–∞ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ –±–æ—Ç–µ', message_thread_id=notification.message_thread_id)


            async with BotDB() as db:
                await db.setChat(checkChat.id, checkChat.title)
                await db.setMessagesThread(flood.message_thread_id, notification.message_thread_id)

            await call.message.edit_text('‚úÖ –ß–∞—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–¥–∞–Ω!\n–í —á–∞—Ç–µ –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã —Ç–µ–º—ã: <b>–û–±—â–µ–Ω–∏–µ, –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</b>', reply_markup=backChat)

        except TelegramBadRequest as e:
            logger.error(e.message)

            if e.message == 'Bad Request: the chat is not a forum':
                await call.message.edit_reply_markup(reply_markup=addChatKey(chat_id))
                await call.answer('–í–∫–ª—é—á–∏—Ç–µ —Ç–µ–º—ã –≤ —á–∞—Ç–µ', True)

            elif e.message == 'Bad Request: not enough rights to create a topic':
                await call.message.edit_reply_markup(reply_markup=addChatKey(chat_id))
                await call.answer('–í—ã–¥–∞–π—Ç–µ –±–æ—Ç—É –ø—Ä–∞–≤–æ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–º–∞–º–∏', True)

            else:
                await call.message.edit_reply_markup(reply_markup=addChatKey(chat_id))
                await call.answer('–ö–∞–∂–µ—Ç—Å—è, –í—ã –ª–∏–±–æ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –±–æ—Ç–∞ –≤ —á–∞—Ç, –ª–∏–±–æ –≤—ã–¥–∞–ª–∏ –Ω–µ –≤—Å–µ –ø—Ä–∞–≤–∞ –±–æ—Ç—É.', True)

    except Exception as e:
        logger.error(e)
        await call.message.edit_reply_markup(reply_markup=addChatKey(chat_id))

        await call.answer('–ö–∞–∂–µ—Ç—Å—è, –í—ã –ª–∏–±–æ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –±–æ—Ç–∞ –≤ —á–∞—Ç, –ª–∏–±–æ –Ω–µ –≤–∫–ª—é—á–∏–ª–∏ —Ç–µ–º—ã –≤ —á–∞—Ç–∞—Ö –ª–∏–±–æ –≤—ã–¥–∞–ª–∏ –Ω–µ –≤—Å–µ –ø—Ä–∞–≤–∞ –±–æ—Ç—É.', True)